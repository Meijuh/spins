<?xml version="1.0"?>
<project name="SpinS" default="jar" basedir=".">
	<target name="init" description="Initializes the build variables">
		<property name="name"           value="spins" />
		<property name="version"        value="0.9"  />

		<property name="spins"         value="spins" />
		<property name="spins_parser"  value="spins/promela/compiler/parser" />

		<property name="build"          value="../build" />
		<property name="dist"           value="../dist" />
		<property name="doc"            value="../doc" />
		<property name="lib"            value="../lib" />
	</target>

	<target name="prepare" description="Creates the output directories" depends="init">
		<mkdir dir="${build}/classes" />
		<mkdir dir="${doc}/api" />
	</target>

    <target name="javacc" description="Generates the java-files from the JavacCC specification" depends="prepare">
        <javacc target="${spins_parser}/Promela.jj"
            javacchome="${lib}"
            outputdirectory="${spins_parser}"
        />
    </target>

	<target name="build" depends="javacc">
        <replace file="spins/promela/compiler/parser/Promela.java">
            <replacetoken>

public class Promela</replacetoken>
            <replacevalue>
@SuppressWarnings({"unused", "serial"})
public class Promela</replacevalue>
        </replace>
        <replace file="spins/promela/compiler/parser/PromelaTokenManager.java">
            <replacetoken>*/
public class Promela</replacetoken>
            <replacevalue>*/
@SuppressWarnings("unused")
public class Promela</replacevalue>
        </replace>
    </target>

	<target name="compile" description="Compiles all java files" depends="build">
		<javac destdir="${build}/classes"  source="1.5" debug="on" debuglevel="lines,vars,source" srcdir="${spins}" includeantruntime="false">
			  <compilerarg line="-XDignore.symbol.file" />	
		</javac>
		<copy file="${spins}/promela/compiler/ltsmin/reach.c"  todir="${build}/classes/${spins}/promela/compiler/ltsmin/" />
		<copy file="${spins}/promela/compiler/ltsmin/hashtable.c"  todir="${build}/classes/${spins}/promela/compiler/ltsmin/" />
	</target>

	<target name="jar" description="Generates jar-file" depends="compile">
		<jar destfile="${build}/${name}.jar">
			<fileset dir="${build}/classes">
				<include name="**/*.class" />
                <include name="**/*.c" />
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Version" value="${version} ${TODAY}" />
				<attribute name="Main-Class" value="spins.Compile" />
			</manifest>
		</jar>
		<copy file="${build}/${name}.jar" todir=".." />
	</target>

	<target name="javadocs" description="Generates the Javadoc of the SpinS library" depends="prepare">
		<javadoc destdir="${doc}/api" author="true" version="true" windowtitle="SpinS API">
			<fileset dir="${spins}" defaultexcludes="yes">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="all" description="Builds all: jar-file and Javadoc documentation" depends="jar,javadocs">
	</target>
    
	<target name="clean" description="Cleans all generated files: build, doc/api and dist" depends="init">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${build}" />
			<fileset dir="${doc}/api" />
			<fileset dir="${dist}" />
		</delete>
	</target>

	<target name="very_clean" description="Clean + remove JavaCC generated Java files" depends="clean">
		<delete failonerror="false">
			<fileset dir="${spins_parser}" 
				includes="*.java" 
				excludes="MyParseException.java,OptionsResult.java,SequenceResult.java" 
			/>
		</delete>
	</target>

	<target name="bin_dist" description="Creates the *binary* distribution for SpinS" depends="jar">
		<property name="bname" value="spins-${version}-bin" />
		<mkdir dir="${dist}" />
		<zip destfile="${dist}/${bname}.zip">
			<zipfileset dir=".." includes="README.html spins.sh" prefix="${bname}" />
			<zipfileset dir="../build" includes="spins.jar" prefix="${bname}" />
			<zipfileset dir="../doc"   includes="CHANGES.txt LICENSE.txt" prefix="${bname}/doc" />
			<zipfileset dir="../tests" prefix="${bname}/tests" />
		 </zip>
	</target>

	<target name="src_dist" description="Creates the *source* distribution for SpinS" depends="bin_dist">
		<property name="sname" value="spins-${version}-src" />
		<zip destfile="${dist}/${sname}.zip">
			<zipfileset dir=".." includes="README.html spins.sh" prefix="${sname}" />
			<zipfileset dir="../build" includes="spins.jar" prefix="${sname}" />
			<zipfileset dir="../doc"   includes="CHANGES.txt LICENSE.txt" prefix="${sname}/doc" />
			<zipfileset dir="../tests" prefix="${sname}/tests" />
			<zipfileset dir="../lib"   prefix="${sname}/lib" />
			<zipfileset dir="../src"   prefix="${sname}/src" />
		 </zip>
	</target>

	<target name="dist" description="Builds the binary and source distributions" depends="src_dist">
	</target>

</project>
