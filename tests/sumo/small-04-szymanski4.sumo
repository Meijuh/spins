/* small-04-szymanski4.sumo - Szymanski's protocol in Promela/SUMO  */
/* generated by: m4 -DN=4 szymanski.m4 > szym4.prom                 */

short mutex;
short flag0;
short flag1;
short flag2;
short flag3;

active proctype monitor () {
    assert(mutex <= 2);     /* should hold */
}

active proctype P0 () {
    do
    ::  flag0 = 1;
        (flag0 < 3) && (flag1 < 3) && (flag2 < 3) && (flag3 < 3) && (1==1);
        flag0 = 3;
        if
        ::  (flag0 == 1) || (flag1 == 1) || (flag2 == 1) || (flag3 == 1) || (1==0) ->
                flag0 = 2;
                (flag0 == 4) || (flag1 == 4) || (flag2 == 4) || (flag3 == 4) || (1==0);
        ::  (flag0 != 1) && (flag1 != 1) && (flag2 != 1) && (flag3 != 1) && (1==1) ->
                1;
        fi;
        flag0 = 4; 
        
        mutex=mutex+1;
        mutex=mutex-1;
        ((flag1 == 0) || (flag1 == 1) || (flag1 ==4)) && 
        ((flag2 == 0) || (flag2 == 1) || (flag2 ==4)) && 
        ((flag3 == 0) || (flag3 == 1) || (flag3 ==4)) && 
        (1==1);
        flag0 = 0;
    od;
}

active proctype P1 () {
    do
    ::  flag1 = 1;
        (flag0 < 3) && (flag1 < 3) && (flag2 < 3) && (flag3 < 3) && (1==1);
        flag1 = 3;
        if
        ::  (flag0 == 1) || (flag1 == 1) || (flag2 == 1) || (flag3 == 1) || (1==0) ->
                flag1 = 2;
                (flag0 == 4) || (flag1 == 4) || (flag2 == 4) || (flag3 == 4) || (1==0);
        ::  (flag0 != 1) && (flag1 != 1) && (flag2 != 1) && (flag3 != 1) && (1==1) ->
                1;
        fi;
        flag1 = 4; 
        (flag0 < 2) && (1==1);
        mutex=mutex+1;
        mutex=mutex-1;
        ((flag2 == 0) || (flag2 == 1) || (flag2 ==4)) && 
        ((flag3 == 0) || (flag3 == 1) || (flag3 ==4)) && 
        (1==1);
        flag1 = 0;
    od;
}

active proctype P2 () {
    do
    ::  flag2 = 1;
        (flag0 < 3) && (flag1 < 3) && (flag2 < 3) && (flag3 < 3) && (1==1);
        flag2 = 3;
        if
        ::  (flag0 == 1) || (flag1 == 1) || (flag2 == 1) || (flag3 == 1) || (1==0) ->
                flag2 = 2;
                (flag0 == 4) || (flag1 == 4) || (flag2 == 4) || (flag3 == 4) || (1==0);
        ::  (flag0 != 1) && (flag1 != 1) && (flag2 != 1) && (flag3 != 1) && (1==1) ->
                1;
        fi;
        flag2 = 4; 
        (flag0 < 2) && (flag1 < 2) && (1==1);
        mutex=mutex+1;
        mutex=mutex-1;
        ((flag3 == 0) || (flag3 == 1) || (flag3 ==4)) && 
        (1==1);
        flag2 = 0;
    od;
}

active proctype P3 () {
    do
    ::  flag3 = 1;
        (flag0 < 3) && (flag1 < 3) && (flag2 < 3) && (flag3 < 3) && (1==1);
        flag3 = 3;
        if
        ::  (flag0 == 1) || (flag1 == 1) || (flag2 == 1) || (flag3 == 1) || (1==0) ->
                flag3 = 2;
                (flag0 == 4) || (flag1 == 4) || (flag2 == 4) || (flag3 == 4) || (1==0);
        ::  (flag0 != 1) && (flag1 != 1) && (flag2 != 1) && (flag3 != 1) && (1==1) ->
                1;
        fi;
        flag3 = 4; 
        (flag0 < 2) && (flag1 < 2) && (flag2 < 2) && (1==1);
        mutex=mutex+1;
        mutex=mutex-1;
        
        flag3 = 0;
    od;
}


